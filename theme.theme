<?php

/**
 * @file
 * Functions to support theming in the GLA Estate theme.
 */

 /**
  * Implements hook_css_alter().
  */
 function gla_estate_css_alter(&$css) {

   // We need to unset these here as they don't get removed in the info file with libraries-override.
   if (isset($css['core/themes/stable/css/content_moderation/content_moderation.module.css'])) {
     unset($css['core/themes/stable/css/content_moderation/content_moderation.module.css']);
   }
   if (isset($css['core/themes/stable/css/content_moderation/content_moderation.theme.css'])) {
     unset($css['core/themes/stable/css/content_moderation/content_moderation.theme.css']);
   }
 }

 /**
 * Implements hook_preprocess_html().
 */
 function gla_estate_preprocess_html(&$variables) {

  $theme_colour = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'theme-color',
      'content' => '#353D42',
    ],
  ];

  $variables['page']['#attached']['html_head'][] = [$theme_colour, 'theme_colour'];
}

/**
 * Implements hook_preprocess_form_element() for form element templates.
 */
function gla_estate_preprocess_form_element(&$variables) {

  if ($variables['type'] == 'checkbox') {
    $variables['is_checkbox'] = TRUE;
    $variables['label']['#attributes']['class'][] = 'custom-input';
    $variables['label']['#attributes']['class'][] = 'custom-checkbox';
  }
  if ($variables['type'] == 'radio') {
    $variables['is_radio'] = TRUE;
    $variables['label']['#attributes']['class'][] = 'custom-input';
    $variables['label']['#attributes']['class'][] = 'custom-radio';
  }

}

/**
 * Implements hook_form_alter().
 */
function gla_estate_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  if ($form_id == 'user_register_form' || $form_id == 'user_pass_reset' || $form_id == 'user_form') {
    $form['actions']['submit']['#attributes']['class'][] = 'button--alt';
  }
  if ($form_id == 'content_moderation_entity_moderation_form') {
    $form['submit']['#attributes']['class'][] = 'button--alt';
  }

}

/**
 * Implements hook_theme_suggestions_alter().
 */
function gla_estate_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'page_title') {
    $route = \Drupal::routeMatch()->getRouteName();
    if ($route == 'entity.node.edit_form') {
      $suggestions[] = 'page_title__node_edit';
    }
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function gla_estate_theme_suggestions_container_alter(array &$suggestions, array $variables, $hook) {
  if (isset($variables['element']['#name']) && $variables['element']['#name'] == 'profile_search') {
    $suggestions[] = 'container__' .  $variables['element']['#name'];
  }
}

/**
 * Implements hook_preprocess_block().
 */
function gla_estate_preprocess_block(&$variables) {
  if (isset($variables['elements']['content']['social_sharing_block'])) {
    $variables['facebook_link'] = html_entity_decode($variables['elements']['content']['social_sharing_block']['#elements']['facebook_share']['api']['href']);
    $variables['twitter_link'] = html_entity_decode($variables['elements']['content']['social_sharing_block']['#elements']['twitter']['api']['href']);
    $variables['linkedin_link'] = html_entity_decode($variables['elements']['content']['social_sharing_block']['#elements']['linkedin']['api']['href']);
    $variables['mail_link'] = html_entity_decode($variables['elements']['content']['social_sharing_block']['#elements']['email']['api']['href']);
  }
}

/**
 * Implements template_preprocess_paragraph().
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 *   - paragraph: The paragraph object.
 *   - view_mode: View mode; e.g., 'full', 'teaser'...
 */
function gla_estate_preprocess_paragraph(&$variables) {
  // Attach general component styles.
  $variables['#attached']['library'][] = 'gla_estate/component';
}
